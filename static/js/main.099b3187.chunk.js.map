{"version":3,"sources":["SolutionTool.jsx","ObservationTool.jsx","DiagFlow.jsx","PdfViewer.jsx","Parser.jsx","Builder.jsx","Upload.jsx","Home.jsx","App.jsx","serviceWorker.js","index.js"],"names":["SolutionTool","args","diagramInstance","selectedItems","connectors","length","nodes","style","fill","i","addInfo","source","sourceWrapper","wrapper","this","inAction","ObservationTool","DiagFlow","_React$Component","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getAnnotationsAsEvents","data","FormData","console","log","state","append","String","fetch","method","body","headers","Access-Control-Allow-Origin","Access-Control-Allow-Credentials","then","response","json","addedNodes","convertNodes","addedEvents","new_annots","pagenum","file","hasPdf","id","offsetX","offsetY","annotations","content","eventtype","sourceID","targetID","downloadCSV","bind","assertThisInitialized","saveAsFile","getGraphRep","convertConnectors","getPorts","inherits","createClass","key","value","undefined","node","shape","offset","x","y","array","result","push","c","_this2","nodeArr","connectorArr","setState","_this3","JSON","stringify","getReader","read","_ref","done","TextDecoder","decode","text","filename","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","_this4","handles","name","pathData","visible","side","pathColor","margin","top","bottom","left","right","backgroundColor","react","className","onClick","toolbar_component","items","tooltipText","prefixIcon","clicked","selectedItem","item","remove","doLayout","element","index","indexOf","splice","float","role","ej2_react_diagrams_es2015","expandMode","palettes","expanded","symbols","iconCss","title","sourcePoint","targetPoint","targetDecorator","strokeWidth","width","height","symbolHeight","symbolWidth","getNodeDefaults","symbol","symbolMargin","getSymbolInfo","fit","ref","diagram","userHandles","snapSettings","constraints","SnapConstraints","HideLines","getCustomTool","action","tool","mouseDown","commandHandler","layout","horizontalSpacing","verticalSpacing","orientation","enableAnimation","obj","cornerRadius","ports","getConnectorDefaults","connector","strokeColor","dataSourceSettings","dragEnter","Node","oWidth","oHeight","ratio","Connector","ej2_react_base","services","DataBinding","HierarchicalTree","React","PdfViewer","viewer","createRef","docViewer","annotManager","instance","initialPage","window","WebViewer","path","sahar","initialDoc","current","loadDocument","enableFilePicker","on","annotList","getAnnotationsList","deleteAnnotations","event","getContents","data2","goToNextPage","react_default","Component","Parser","myViewer","location","BackHome","withRouter","history","src","alt","pathname","reload","NextPage","_ref2","newPage","parseInt","src_DiagFlow_0","src_PdfViewer","Builder","Upload","handleUpload","bsCustomFileInput","init","uploadInput","files","getElementById","ParserSubmit","autoComplete","class","for","placeholder","Home","fileToBeSent","react_router_dom","component","ToBuilder","src_Upload","App","react_router","exact","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.099b3187.chunk.js","sourcesContent":["class SolutionTool{ // this tool handles the red user handle of the node, changing both the fill of node and changing to type to be a solution.\r\n\r\n    mouseDown(args,diagramInstance) {\r\n        if(diagramInstance.selectedItems.connectors.length === 0){\r\n            if (diagramInstance.selectedItems.nodes.length > 0 && diagramInstance.selectedItems.nodes[0].style.fill !== \"#3583ba\"){\r\n                for(var i in diagramInstance.selectedItems.nodes){\r\n                    diagramInstance.selectedItems.nodes[i].style.fill = \"#3583ba\";\r\n                    diagramInstance.selectedItems.nodes[i].addInfo[0]['eventtype'] = \"S\";\r\n                }\r\n            args.source = diagramInstance.nodes[diagramInstance.nodes.length - 1];\r\n            args.sourceWrapper = args.source.wrapper;\r\n            this.inAction = true;\r\n            }\r\n            else{\r\n                diagramInstance.selectedItems.nodes[0].style.fill = \"#ffeec7\";\r\n                diagramInstance.selectedItems.nodes[0].addInfo[0]['eventtype'] = \"N\";\r\n\r\n                args.source = diagramInstance.nodes[diagramInstance.nodes.length - 1];\r\n                args.sourceWrapper = args.source.wrapper;\r\n                this.inAction = true;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default SolutionTool;","class ObservationTool{\r\n\r\n    mouseDown(args,diagramInstance) {\r\n        if(diagramInstance.selectedItems.connectors.length === 0){\r\n            if (diagramInstance.selectedItems.nodes.length > 0 && diagramInstance.selectedItems.nodes[0].style.fill !== \"#F45342\"){\r\n                for(var i in diagramInstance.selectedItems.nodes){\r\n                    diagramInstance.selectedItems.nodes[i].style.fill = \"#F45342\";\r\n                    diagramInstance.selectedItems.nodes[i].addInfo[0]['eventtype'] = \"O\";\r\n                }\r\n            args.source = diagramInstance.nodes[diagramInstance.nodes.length - 1];\r\n            args.sourceWrapper = args.source.wrapper;\r\n            this.inAction = true;\r\n            }\r\n            else{\r\n                diagramInstance.selectedItems.nodes[0].style.fill = \"#ffeec7\";\r\n                diagramInstance.selectedItems.nodes[0].addInfo[0]['eventtype'] = \"N\";\r\n\r\n                args.source = diagramInstance.nodes[diagramInstance.nodes.length - 1];\r\n                args.sourceWrapper = args.source.wrapper;\r\n                this.inAction = true;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default ObservationTool;","import * as React from \"react\";\r\nimport './DiagFlow.css'\r\nimport { ToolbarComponent } from '@syncfusion/ej2-react-navigations';\r\nimport { HierarchicalTree, DataBinding, DiagramComponent, Inject, SymbolPaletteComponent, Connector, SnapConstraints } from \"@syncfusion/ej2-react-diagrams/dist/es6/ej2-react-diagrams.es2015\";\r\nimport SolutionTool from './SolutionTool';\r\nimport ObservationTool from './ObservationTool';\r\n\r\n/** class compenent dealing with interactive diagram flowchart */\r\nexport class DiagFlow extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.pagenum = props.pagenum\r\n        this.file = props.file\r\n        console.log(this.file)\r\n        this.hasPdf = props.hasPdf // if diagflow is used as a representation for pdf parsing, its True\r\n        /**state handles the existing nodes and connectors */\r\n        this.state ={\r\n             nodes : [\r\n                {\r\n                    id: \"n1\",\r\n                    offsetX: 280,\r\n                    offsetY: 250,\r\n                    annotations: [{ content: \"\" }],\r\n                    addInfo : [{'eventtype' : ''}]\r\n                },\r\n                {\r\n                    id: \"n2\",\r\n                    offsetX: 280,\r\n                    offsetY: 110,\r\n                    annotations: [{ content: \"\" }],\r\n                    addInfo : [{'eventtype' : ''}]\r\n\r\n                },\r\n               \r\n                \r\n            ],\r\n            //Initializes the connector for the diagram\r\n             connectors : [\r\n                {\r\n                    id: \"connector1\",\r\n                    sourceID: \"n1\",\r\n                    targetID: \"n2\",\r\n                },\r\n            ]\r\n                \r\n        }\r\n        this.addedEvents = null\r\n        this.nodes = null\r\n        this.connectors = []\r\n        this.new_annots = false\r\n        this.downloadCSV = this.downloadCSV.bind(this);\r\n        this.saveAsFile = this.saveAsFile.bind(this);\r\n        this.getGraphRep = this.getGraphRep.bind(this);\r\n        this.convertNodes = this.convertNodes.bind(this);\r\n\t\tthis.convertConnectors = this.convertConnectors.bind(this);\r\n        this.getPorts = this.getPorts.bind(this);\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.file !== undefined){\r\n            this.getGraphRep()\r\n        }\r\n\t}\r\n    \r\n    /** returns the ports to enable connecting and disconecting connectors */\r\n\tgetPorts(node){\r\n\t\tlet ports = [\r\n\t\t\t{ id: \"port1\", shape: \"Circle\", offset: { x: 0, y: 0.5 } },\r\n\t\t\t{ id: \"port2\", shape: \"Circle\", offset: { x: 0.5, y: 1 } },\r\n\t\t\t{ id: \"port3\", shape: \"Circle\", offset: { x: 1, y: 0.5 } },\r\n\t\t\t{ id: \"port4\", shape: \"Circle\", offset: { x: 0.5, y: 0 } }\r\n\t\t];\r\n\t\treturn ports;\r\n\r\n\t}\r\n\r\n    /** @return an array that is compliant with diagram API, from what JSON format returns as. */\r\n    convertNodes(array){\r\n        var result = []\r\n        for (var i in array){\r\n            result.push({\r\n                id : String(array[i]['Name']),\r\n                annotations : [{content : String(array[i]['Content'])}],\r\n                addInfo : [{eventtype : String(array[i]['eventtype'])}]\r\n            })\r\n        }\r\n        return result\r\n    }\r\n\r\n\r\n    /** @return an array that is compliant with diagram API, from what JSON format returns as. */\r\n\r\n    convertConnectors(array){\r\n        var result = []\r\n        for (var c in array){\r\n\t\t\tif(array[c] !== null){\r\n\t\t\t\tresult.push({\r\n\t\t\t\t\tid : String(array[c]['id']),\r\n\t\t\t\t\tsourceID : String(array[c]['sourceID']),\r\n\t\t\t\t\ttargetID : String(array[c]['targetID']),\r\n\t\t\t\t\tannotations : [{content : String(array[c]['content'])}]\r\n\t\t\t\t})\r\n\t\t\t}\r\n        }\r\n        return result\r\n    }\r\n\r\n    /** retrieves and sets state of PDF tree representation  */\r\n    getGraphRep(){\r\n        var data = new FormData()\r\n        data.append('pagenum', this.pagenum)\r\n        data.append('file', this.file)\r\n        fetch('/GetGraph', {\r\n        method: 'POST',\r\n        body: data,\r\n        headers:{\r\n          \"Access-Control-Allow-Origin\" : \"*\", \r\n          \"Access-Control-Allow-Credentials\" : true,\r\n        }\r\n      }).then(response => response.json())\r\n      .then(response => {\r\n        console.log(this.state.data)\r\n        console.log(response['nodes'][0]['Name'])\r\n        console.log(response['connectors'])\r\n        //exports.nodes = response['nodes']\r\n        //exports.connectors = response['connectors']\r\n        var nodeArr = this.convertNodes(response['nodes'])\r\n        var connectorArr = this.convertConnectors(response['connectors'])\r\n        console.log(nodeArr)\r\n        this.setState({nodes : nodeArr, connectors: connectorArr})\r\n  \r\n      }\r\n      )\r\n    }\r\n\r\n    /** gets all annotations from server, adds them to addedEvents array and sets has_annotations to True */\r\n    getAnnotationsAsEvents = () =>{\r\n        var data = new FormData()\r\n        console.log(this.state.nodes.length)\r\n        data.append(\"size\", String(this.state.nodes.length))\r\n        fetch('/GetAnnots', {\r\n        method: 'POST',\r\n        body: data,\r\n        headers:{\r\n          \"Access-Control-Allow-Origin\" : \"*\", \r\n          \"Access-Control-Allow-Credentials\" : true,\r\n        }\r\n      }).then(response => response.json())\r\n      .then(response => {\r\n          /*this.addedEvents = response\r\n          console.log(this.addedEvents)\r\n          this.new_annots = true*/\r\n          var addedNodes = this.convertNodes(response)\r\n          this.addedEvents = addedNodes\r\n          this.new_annots = true\r\n      })\r\n\r\n    }\r\n\r\n    /**fetches csv created in server, downloads to client */\r\n    downloadCSV(){\r\n        var data = new FormData()\r\n        data.append('nodes', JSON.stringify(this.state.nodes))\r\n        data.append('connectors', JSON.stringify(this.state.connectors))\r\n        fetch('/downloadcsv', {\r\n            method: 'POST',\r\n            body: data,\r\n            headers:{\r\n              \"Access-Control-Allow-Origin\" : \"*\", \r\n              \"Access-Control-Allow-Credentials\" : true,\r\n            }\r\n        }).then((response) => {\r\n            var a = response.body.getReader();\r\n            a.read().then(({ done, value }) => {\r\n                // console.log(new TextDecoder(\"utf-8\").decode(value));\r\n                this.saveAsFile(new TextDecoder(\"utf-8\").decode(value), 'result.csv');\r\n              }\r\n            );\r\n        });\r\n    }\r\n        \r\n        \r\n        saveAsFile(text, filename) {\r\n          // Step 1: Create the blob object with the text you received\r\n          const type = 'text/csv'; // modify or get it from response\r\n          const blob = new Blob([text], {type});\r\n        \r\n          // Step 2: Create Blob Object URL for that blob\r\n          const url = URL.createObjectURL(blob);\r\n        \r\n          // Step 3: Trigger downloading the object using that URL\r\n          const a = document.createElement('a');\r\n          a.href = url;\r\n          a.download = filename;\r\n          a.click(); // triggering it manually\r\n        }\r\n\r\n    render() {\r\n        let diagramInstance;\r\n        \r\n        let handles = [{ //sets user buttons on each diagram element\r\n            name: 'solution',\r\n            pathData: 'M60.3,18H27.5c-3,0-5.5,2.4-5.5,5.5v38.2h5.5V23.5h32.7V18z M68.5,28.9h-30c-3, 0-5.5,2.4-5.5,5.5v38.2c0,3,2.4,5.5,5.5,5.5h30c3,0,5.5-2.4,5.5-5.5V34.4C73.9,31.4,71.5,28.9,68.5,28.9z M68.5,72.5h-30V34.4h30V72.5z',\r\n            visible: true,\r\n            offset: 1,\r\n            side: 'Right',\r\n            pathColor: \"white\",\r\n            margin: {\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 100\r\n            },\r\n            backgroundColor: 'blue'\r\n        },\r\n        {\r\n            name: 'observation',\r\n            pathData: 'M60.3,18H27.5c-3,0-5.5,2.4-5.5,5.5v38.2h5.5V23.5h32.7V18z M68.5,28.9h-30c-3, 0-5.5,2.4-5.5,5.5v38.2c0,3,2.4,5.5,5.5,5.5h30c3,0,5.5-2.4,5.5-5.5V34.4C73.9,31.4,71.5,28.9,68.5,28.9z M68.5,72.5h-30V34.4h30V72.5z',\r\n            visible: true,\r\n            offset: 1,\r\n            side: 'Left',\r\n            pathColor: \"white\",\r\n            margin: {\r\n                top: 10,\r\n                bottom: 10,\r\n                left: 100,\r\n                right: 10\r\n            },\r\n            backgroundColor: 'red'\r\n        }\r\n        ]\r\n\r\n        //sets template icons for draggable pallettes\r\n        let flowshapes = [\r\n            {id : 'Process', shape: { type: \"Flow\", shape: \"Process\"}}\r\n        ]\r\n\r\n        let connectorSymbols = [\r\n            {\r\n                id: \"Link1\",\r\n                type: \"Orthogonal\",\r\n                sourcePoint: { x: 0, y: 0 },\r\n                targetPoint: { x: 60, y: 60 },\r\n                targetDecorator: { shape: \"Arrow\" },\r\n                style: { strokeWidth: 1 }\r\n            },\r\n        ]\r\n\r\n        //only show the add PDF Annotations if used in the parse from PDF option\r\n        const AddPDFButton = () => {\r\n            if(this.hasPdf){\r\n                return(\r\n                    <button className=\"btn btn-secondary\" onClick={() => {this.getAnnotationsAsEvents()}}>Add PDF Annotations</button>\r\n                );\r\n            }\r\n            else{\r\n                return(\r\n                    <div></div>\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n\t\t\t<div className=\"control-pane font-size:larger\">\r\n\t\t\t\t<div className=\"control-section\">\r\n                <AddPDFButton/>\r\n\t\t\t\t<button className=\"btn btn-success\" onClick={ ()=>{ //Applying changes done on clientside to diagram API\r\n\t\t\t\t\t\tvar nodeArr = []\r\n\t\t\t\t\t\tvar connectorArr = []\r\n\t\t\t\t\t\tfor(var i in diagramInstance.nodes){\r\n\t\t\t\t\t\t\tnodeArr.push({\r\n\t\t\t\t\t\t\t\tid : String(diagramInstance.nodes[i].id),\r\n\t\t\t\t\t\t\t\tannotations : [{content : String(diagramInstance.nodes[i].annotations[0].content)}],\r\n\t\t\t\t\t\t\t\taddInfo : [{eventtype : String(diagramInstance.nodes[i].addInfo[0].eventtype)}]    \r\n\t\t\t\t\t\t\t})\r\n\r\n                        }\r\n\r\n                        //now add the pdf highlights as nodes, if present.\r\n                        if(this.new_annots){\r\n                            for(var a in this.addedEvents){\r\n                                nodeArr.push(this.addedEvents[a])\r\n                            }\r\n                        }\r\n                            \r\n                        console.log(nodeArr)\r\n\t\t\t\t\t\tfor(var c in diagramInstance.connectors){\r\n\t\t\t\t\t\t\tconnectorArr.push({\r\n\t\t\t\t\t\t\t\tid : String(diagramInstance.connectors[c].id),\r\n\t\t\t\t\t\t\t\tsourceID : String(diagramInstance.connectors[c].sourceID),\r\n\t\t\t\t\t\t\t\ttargetID : String(diagramInstance.connectors[c].targetID),\r\n\t\t\t\t\t\t\t\tannotations : [{content : String(diagramInstance.connectors[c].annotations[0].content)}] \r\n\t\t\t\t\t\t\t})\r\n\r\n                        }\r\n\t\t\t\t\t\tthis.setState({nodes : nodeArr, connectors : connectorArr})\r\n\t\t\t\t\t\tconsole.log(this.state.nodes)\r\n                        console.log(this.state.connectors)\r\n                        this.new_annots = false\r\n                    \r\n\t\t\t\t\t}}>Apply Edits (Refresh Diagram)</button>\r\n\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\" onClick={this.downloadCSV}>Get Results</button> \r\n\r\n                    <ToolbarComponent id='toolbar'  items={[ // handles the deletion of client side elements. \r\n                                                                                                    //Only gets updated server-side when apply edits button is triggered\r\n                    {\r\n                        tooltipText: 'Delete',\r\n                        prefixIcon: 'e-ddb-crudicons e-delete',\r\n                        id: 'Delete',\r\n                        text: 'Delete'\r\n                    }\r\n        ]} clicked={(args) => {\r\n            let selectedItem;\r\n            if (diagramInstance.selectedItems.nodes.length > 0) {\r\n                selectedItem = diagramInstance.selectedItems.nodes[0];\r\n            }\r\n            if (diagramInstance.selectedItems.connectors.length > 0) {\r\n                selectedItem = diagramInstance.selectedItems.connectors[0];\r\n            }\r\n            if (selectedItem) {\r\n                switch (args.item.tooltipText) {\r\n                    case 'Delete':\r\n                        diagramInstance.remove(selectedItem);\r\n                        diagramInstance.doLayout();\r\n                        let element = { id: selectedItem.id, annotations: selectedItem.annotations, addInfo: selectedItem.addInfo };\r\n                        let index = this.state.nodes.indexOf(element);\r\n                        console.log(index)\r\n                        this.state.nodes.splice(index, 1);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }} />\r\n\t\t\t\t\t<div className=\"sb-mobile-palette-bar\">\r\n\t\t\t\t\t\t<div id=\"palette-icon\" style={{ float: \"right\", role: \"button\" }} className=\"e-ddb-icons1 e-toggle-palette\"></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div id=\"palette-space\" className=\"sb-mobile-palette\">\r\n\t\t\t\t\t\t<SymbolPaletteComponent id=\"symbolpalette\" expandMode=\"Multiple\" palettes={[\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tid: \"flow\",\r\n\t\t\t\t\t\t\t\t\texpanded: true,\r\n\t\t\t\t\t\t\t\t\tsymbols: flowshapes,\r\n\t\t\t\t\t\t\t\t\ticonCss: \"e-diagram-icons1 e-diagram-flow\",\r\n\t\t\t\t\t\t\t\t\ttitle: \"Add Events\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tid: \"connectors\",\r\n\t\t\t\t\t\t\t\t\texpanded: true,\r\n\t\t\t\t\t\t\t\t\tsymbols: connectorSymbols,\r\n\t\t\t\t\t\t\t\t\ticonCss: \"e-diagram-icons1 e-diagram-connector\",\r\n\t\t\t\t\t\t\t\t\ttitle: \"Add Connectors\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]} width={\"20%%\"} height={\"700px\"} symbolHeight={60} symbolWidth={60} getNodeDefaults={(symbol) => {\r\n\t\t\t\t\t\t\t\tif (symbol.id === \"Process\") {\r\n\t\t\t\t\t\t\t\t\tsymbol.width = 80;\r\n\t\t\t\t\t\t\t\t\tsymbol.height = 40;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}} symbolMargin={{ left: 0, right: 0, top: 0, bottom: 0 }} getSymbolInfo={(symbol) => {\r\n\t\t\t\t\t\t\t\treturn { fit: true };\r\n\t\t\t\t\t\t\t}}/>\r\n                           \r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div id=\"diagram-space\" className=\"sb-mobile-diagram\">\r\n\t\t\t\t\t<DiagramComponent id=\"diagram\" ref={diagram => (diagramInstance = diagram)}  nodes={this.state.nodes} connectors ={this.state.connectors} width={\"100%\"} height={750} \r\n\t\t\t\t\t\t\tselectedItems ={{\r\n                                \r\n\t\t\t\t\t\t\t\tuserHandles: handles\r\n\t\t\t\t\t\t\t}}\r\n                            snapSettings={{constraints: SnapConstraints.HideLines}}\r\n                            \r\n\t\t\t\t\t\t\tgetCustomTool={(action) => {\r\n                                let tool;\r\n                               // handles[1][\"visible\"] = false\r\n\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif(diagramInstance.selectedItems.connectors.length === 0 && diagramInstance.selectedItems.nodes.length !== 0){\r\n\t\t\t\t\t\t\t\t\tif (action === 'solution') {\r\n\t\t\t\t\t\t\t\t\t\ttool = new SolutionTool().mouseDown(diagramInstance.commandHandler, diagramInstance)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if(action === 'observation'){\r\n\t\t\t\t\t\t\t\t\t\ttool = new ObservationTool().mouseDown(diagramInstance.commandHandler, diagramInstance)\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\treturn tool;\r\n\t\t\t\t\t\t\t\t} else{\r\n                                    handles[1][\"visible\"] = false\r\n                                }\r\n\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tlayout={{\r\n\t\t\t\t\t\t\t\ttype: \"HierarchicalTree\",\r\n\t\t\t\t\t\t\t\thorizontalSpacing: 40,\r\n\t\t\t\t\t\t\t\tverticalSpacing: 40,\r\n                                orientation: \"TopToBottom\",\r\n                                enableAnimation: true,\r\n\t\t\t\t\t\t\t\tmargin: { left: 10, right: 0, top: 50, bottom: 0 }\r\n\t\t\t\t\t\t\t} //Configrues hierarchical tree layout\r\n\t\t\t\t\t\t\t} getNodeDefaults={(obj) => {\r\n\t\t\t\t\t\t\t\t//Sets the default values of nodes\r\n\t\t\t\t\t\t\t\tif (obj.addInfo === undefined){\r\n\t\t\t\t\t\t\t\t\tvar arr = [{eventtype : 'N'}]\r\n\t\t\t\t\t\t\t\t\tobj.addInfo = arr\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(obj.annotations === undefined){\r\n\t\t\t\t\t\t\t\t\tobj.annotations= [{content : \"\"}]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tlet contentArr = [{content: ''}]\r\n\t\t\t\t\t\t\t\tif(obj.annotations.length === 0){\r\n\t\t\t\t\t\t\t\t\t\tobj.annotations = contentArr\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tobj.width =120;\r\n\t\t\t\t\t\t\t\tobj.height = 100;\r\n\t\t\t\t\t\t\t\t//Initialize shape\r\n\t\t\t\t\t\t\t\tobj.shape = {\r\n\t\t\t\t\t\t\t\t\ttype: \"Basic\",\r\n\t\t\t\t\t\t\t\t\tshape: \"Rectangle\",\r\n\t\t\t\t\t\t\t\t\tcornerRadius: 7\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tobj.style.fill = obj.addInfo === undefined ?'#ffeec7' :  obj.addInfo[0].eventtype === 'S' ? \"#3583ba\" : obj.addInfo[0].eventtype === 'O' ? \"#F45342\" : '#ffeec7';\r\n                                obj.ports = this.getPorts(obj);\r\n\t\t\t\t\t\t\t\treturn obj;\r\n\t\t\t\t\t\t\t}} getConnectorDefaults={(connector) => {\r\n\t\t\t\t\t\t\t\t//Sets the default values of connector\r\n\t\t\t\t\t\t\t\tif(connector.id.indexOf(\"connector\") !== -1){\r\n\t\t\t\t\t\t\t\t\tconnector.type = \"Orthogonal\";\r\n\t\t\t\t\t\t\t\t\tconnector.cornerRadius = 7;\r\n\t\t\t\t\t\t\t\t\tconnector.targetDecorator.height = 10;\r\n\t\t\t\t\t\t\t\t\tconnector.targetDecorator.width = 10;\r\n\t\t\t\t\t\t\t\t\tconnector.style.strokeColor = \"#6d6d6d\";\r\n\t\t\t\t\t\t\t\t\tlet contentArr = [{content: ''}]\r\n\t\t\t\t\t\t\t\t\tif(connector.annotations.length === 0 || connector.annotations === undefined){\r\n\t\t\t\t\t\t\t\t\t\tconnector.annotations = contentArr\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\t\tconsole.log(connector)\r\n\t\t\t\t\t\t\t\t\tconnector = null\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t}} dataSourceSettings={{ \t\r\n\t\t\t\t\t\t\t\tid : \"id\"\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tdragEnter={(args) => {\r\n\t\t\t\t\t\t\t\tlet obj = args.element;\r\n\t\t\t\t\t\t\t\tif (obj instanceof Node) {\r\n\t\t\t\t\t\t\t\t\tconsole.log(obj)\r\n\t\t\t\t\t\t\t\t\tlet oWidth = obj.width;\r\n\t\t\t\t\t\t\t\t\tlet oHeight = obj.height;\r\n\t\t\t\t\t\t\t\t\tlet ratio = 100 / obj.width;\r\n\t\t\t\t\t\t\t\t\tobj.width = 100;\r\n\t\t\t\t\t\t\t\t\tobj.height *= ratio;\r\n\t\t\t\t\t\t\t\t\tobj.offsetX += (obj.width - oWidth) / 2;\r\n\t\t\t\t\t\t\t\t\tobj.offsetY += (obj.height - oHeight) / 2;\r\n\t\t\t\t\t\t\t\t\tobj.style = { fill: \"#357BD2\", strokeColor: \"white\" };\t\t\t\r\n                                }\r\n                                if (obj instanceof Connector){\r\n                                    obj.annotations = [{content : \"\"}]\r\n                                }\r\n                            }}\r\n                           \r\n\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Inject services={[DataBinding, HierarchicalTree ]}/>\r\n\t\t\t\t\t\t\t\t</DiagramComponent>\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n                \r\n\t\t\t</div>\r\n        \r\n      );\r\n    }\r\n}\r\nexport default DiagFlow;\r\n\r\n","/** PdfViewer component: uses PDFTron and Webviewer libraries to view and interact with pdfs. */\r\n\r\nimport React from 'react';\r\nclass PdfViewer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.file = props.file\r\n    this.viewer = React.createRef();\r\n    this.docViewer = null;\r\n    this.annotManager = null;\r\n    this.instance = null;\r\n    this.initialPage = props.pagenum\r\n    console.log(this.initialPage)\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.WebViewer({\r\n      path: process.env.NODE_ENV === \"development\" ? '/lib' : window.sahar + 'lib',\r\n      initialDoc: ''\r\n    }, this.viewer.current).then(instance => {\r\n      // at this point, the viewer is 'ready'\r\n      // call methods from instance, docViewer and annotManager as needed\r\n      this.instance = instance;\r\n      this.docViewer = instance.docViewer;\r\n      this.annotManager = instance.annotManager;\r\n      instance.loadDocument(this.file)\r\n\r\n      instance.enableFilePicker();\r\n     // instance.disableNotesPanel()\r\n\r\n      // you can also access major namespaces from the instance as follows:\r\n      // var Tools = instance.Tools;\r\n      // var Annotations = instance.Annotations;\r\n\r\n      // now you can access APIs through `this.instance`\r\n      //this.instance.openElement('notesPanel')\r\n\r\n      // or listen to events from the viewer element\r\n\r\n      \r\n\r\n      \r\n\r\n      \r\n      \r\n\r\n      //delete all existing annotations\r\n      this.docViewer.on('annotationsLoaded', () => {\r\n        console.log('annotations loaded');\r\n        var annotList = this.annotManager.getAnnotationsList()\r\n        this.annotManager.deleteAnnotations(this.annotManager.getAnnotationsList())\r\n      for(var a in annotList){\r\n        console.log(annotList[a])\r\n      }\r\n      });\r\n      //now listen for any additions,modifications, or deletions in highlights/annotations\r\n      this.annotManager.on('annotationChanged',  (event, annotations, action) => {\r\n        if (action === 'add') {//if we add, post to server the content of highlight\r\n          console.log(annotations[0].getContents())\r\n          var data = new FormData()\r\n          data.append('event', annotations[0].getContents())\r\n          fetch('http://localhost:5000/addEventFromPDF', {\r\n              method: 'POST',\r\n              body: data,\r\n              headers:{\r\n                \"Access-Control-Allow-Origin\" : \"*\", \r\n                \"Access-Control-Allow-Credentials\" : true,\r\n              }\r\n          }).then(response => response.json()).then(\r\n            //response => alert(\"added [responses]. Click Apply Changes to See.\")\r\n          )\r\n        } else if (action === 'modify') {\r\n         \r\n          console.log('this change modified annotations');\r\n        } else if (action === 'delete') { //send the content of the deleted annotation so we can delete from server as well.\r\n          var data2 = new FormData()\r\n          data2.append('event', annotations[0].getContents())\r\n          fetch('http://localhost:5000/removeEventFromPDF', {\r\n              method: 'POST',\r\n              body: data2,\r\n              headers:{\r\n                \"Access-Control-Allow-Origin\" : \"*\", \r\n                \"Access-Control-Allow-Credentials\" : true,\r\n              }\r\n          })\r\n        }\r\n      })\r\n      this.docViewer.on('documentLoaded', () =>{ // when document loads, go to page chosen by user\r\n        for(var i = 1; i < this.initialPage; i++){\r\n          this.instance.goToNextPage()\r\n      }\r\n      })\r\n\r\n      \r\n    })\r\n  }\r\n\r\n\r\n\r\n  \r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n      <div className=\"webviewer\" style={{height: \"750px\"}} ref={this.viewer}></div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default PdfViewer;","import React from 'react';\r\nimport DiagFlow from './DiagFlow';\r\nimport PdfViewer  from './PdfViewer';\r\nimport { withRouter, Link } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n/**Parent Component of Parser Page, houses the diagram flowcharting component and the pdf viewer component */\r\nclass Parser extends React.Component {\r\n  \r\n  constructor(props){\r\n    super(props);\r\n    //this.filename = props.location.state.filename\r\n    //this.pagenum = props.location.state.pagenum\r\n    //this.file = props.location.state.file\r\n    //this.data = props.location.state.data\r\n    this.myViewer = React.createRef();\r\n    this.state ={\r\n      pagenum: props.location.state.pagenum,\r\n      file: props.location.state.file\r\n    }\r\n    window.console.log(this.state)\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  \r\n\r\n  \r\n  componentWillMount(){\r\n\r\n  }\r\n  componentDidMount(){\r\n\r\n  }\r\n  \r\n\r\n \r\n\r\n\r\n \r\n  render(){\r\n    /** loads same parser component with the next page in the pdf file as input to parse. */\r\n    \r\n    \r\n    /** sends user back to the home page */\r\n    const BackHome = withRouter(({history}) => (\r\n      <img src=\"https://pbs.twimg.com/media/Dn88s1aWsAAF4fH.png\" width=\"200\" height=\"150\"alt=\"\" onClick={() =>{\r\n        history.push({\r\n        pathname: '/',\r\n        })\r\n        window.location.reload();\r\n          }}>\r\n       </img>\r\n\r\n    ))\r\n\r\n    const NextPage = withRouter(({history}) => (\r\n      <button className=\"btn btn-primary\" onClick={() =>{\r\n        var newPage = parseInt(this.state.pagenum) + 1;\r\n        console.log(newPage)\r\n        console.log(this.file)\r\n        history.push({\r\n          pathname: '/parser',\r\n          state: {pagenum: newPage, file:this.state.file}\r\n        })\r\n        window.location.reload()\r\n      }}>Parse Next Page</button>\r\n    ))\r\n\r\n    \r\n   \r\n      return (\r\n        // initialize Uploader component\r\n  \r\n    <div className=\"container-fluid\">\r\n      \r\n      <div className=\"row\">\r\n        <div className=\"container\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <BackHome/>\r\n                <h3 className=\"navbar-brand\">Aquant-Fault Tree Parser</h3>\r\n                <h6>Please Label Events. Red = Observation, Blue = Solution.</h6>\r\n                <NextPage/> \r\n                           \r\n                </nav>\r\n                </div>\r\n        </div>\r\n      <div className=\"row\"> \r\n        <div className=\"col-lg-7\">\r\n          <DiagFlow file={this.state.file} pagenum={this.state.pagenum} hasPdf ={true}/>\r\n          \r\n        </div>\r\n        <div className=\"col-lg-5\">\r\n        <PdfViewer file={this.state.file} pagenum={this.state.pagenum}/>\r\n        </div>\r\n      </div>\r\n      \r\n        \r\n  \r\n    </div>\r\n\r\n  );\r\n  }\r\n \r\n  }\r\n\r\n  export default Parser;","import React from 'react'\r\nimport DiagFlow from './DiagFlow'\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n/** Build from scratch component */\r\nclass Builder extends React.Component{\r\n\r\n    render(){\r\n        const BackHome = withRouter(({history}) => (\r\n            <img src=\"https://pbs.twimg.com/media/Dn88s1aWsAAF4fH.png\" width=\"200\" height=\"150\"alt=\"\" onClick={() =>{\r\n              history.push({\r\n              pathname: '/',\r\n              })\r\n              window.location.reload();\r\n                }}>\r\n             </img>\r\n      \r\n          ))\r\n      \r\n          \r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n            <div className=\"container\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <BackHome/>\r\n                <h3 className=\"navbar-brand\">Aquant-Fault Tree Parser</h3>\r\n                <h6>Please Label Events. Red = Observation, Blue = Solution.</h6>\r\n                 \r\n                           \r\n                </nav>\r\n                </div>\r\n        </div>\r\n                <DiagFlow hasPdf={false}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Builder;","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport bsCustomFileInput from 'bs-custom-file-input';\r\n\r\n\r\n/** component that deals with uploading and loading fault trees from pdf */\r\nclass Upload extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.pagenum = null\r\n        this.file = null\r\n        this.handleUpload = this.handleUpload.bind(this)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n      bsCustomFileInput.init()\r\n    }\r\n\r\n    /** takes the file uploaded by the user and the page number\r\n     * sends to server to retrieve corresponding fault tree\r\n     * \r\n     */\r\n    handleUpload(){\r\n      this.file = this.uploadInput.files[0];\r\n      this.pagenum = document.getElementById(\"pagenum\").value\r\n      var data = new FormData()\r\n      data.append('file', this.file);\r\n      data.append('pagenum', this.pagenum)\r\n      console.log(data)\r\n      fetch('/upload', {\r\n        method: 'POST',\r\n        body: data,\r\n        headers:{\r\n          \"Access-Control-Allow-Origin\" : \"*\", \r\n          \"Access-Control-Allow-Credentials\" : true,\r\n        }\r\n      }).then(response => response.json())\r\n      .then(response => {\r\n        this.setState({data: response});\r\n\r\n\r\n      }\r\n      )\r\n    }\r\n\r\n\r\n    \r\n    render() {\r\n        const ParserSubmit = withRouter(({history}) => (// the submit button that loads the url to the parser component\r\n            <button type=\"submit\" className=\"btn btn-primary p-3\" onClick={()=>{\r\n                this.file = this.uploadInput.files[0];\r\n                this.pagenum = document.getElementById(\"pagenum\").value\r\n                history.push({\r\n                pathname: '/parser/',\r\n                state: {pagenum: this.pagenum, file: this.file,}\r\n                })}}>\r\n             Submit \r\n             </button>\r\n\r\n          ))\r\n        return (\r\n            <form autoComplete=\"off\">\r\n           \r\n            <div class=\"custom-file\">\r\n              <input ref={(ref) => { this.uploadInput = ref; }} type=\"file\" class=\"custom-file-input file-name\" id=\"customFile\"/>\r\n              <label class=\"custom-file-label\" for=\"customFile\">Choose file</label>\r\n            </div>\r\n            <input id=\"pagenum\" className=\"form-control form-control-lg\" type=\"text\" placeholder=\"Enter starting PDF page.\"/>\r\n            <button type=\"button\" className=\"btn btn-success p-3\" onClick={()=>{\r\n              this.handleUpload()\r\n            }}>Apply</button>\r\n            <ParserSubmit/>\r\n          </form>\r\n        );\r\n      }\r\n    \r\n}\r\n\r\nexport default Upload;","import React,{Component} from 'react';\r\nimport Parser from './Parser';\r\nimport Builder from './Builder';\r\nimport { BrowserRouter as  Route,withRouter } from \"react-router-dom\";\r\nimport Upload from './Upload';\r\n\r\n\r\nclass Home extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.filename = null\r\n        this.pagenum = null\r\n        this.fileToBeSent = null\r\n\r\n    }\r\n    \r\n    \r\n\r\n    routeChangeToParser() {\r\n        return(\r\n        <Route path=\"/parser\" component={Parser} />\r\n        );\r\n\r\n      }\r\n    \r\n\r\n    render(){\r\n        //document.body.appendChild(<Upload/>);\r\n        const ToBuilder = withRouter(({history}) => (\r\n        \r\n                <button className=\"btn btn-primary\" onClick={()=>{\r\n                    history.push({\r\n                        pathname: '/builder/',\r\n                        \r\n                        })\r\n                }}>Start from Scratch!</button>\r\n            \r\n        ))\r\n\r\n        return(\r\n            \r\n            <div className=\"jumbotron\">\r\n                <div className=\"row\">\r\n                <div className=\"col-m-7 p-3\">\r\n                    <h1 className=\"display-4\">Aquant Fault Tree Evaluator</h1>\r\n                    <p className=\"lead\">To run: Upload Troubleshooting Manual or Start from scratch!</p>\r\n                </div>\r\n                <img src=\"https://pbs.twimg.com/media/Dn88s1aWsAAF4fH.png\" width=\"200\" height=\"150\"alt=\"\"/>\r\n                </div>\r\n                <hr className=\"my-4\"></hr>\r\n                <div className = \"row\">\r\n                    <div className=\"col-m-6\">\r\n                        <Upload/>\r\n                    </div>\r\n                    <div className=\"col-m-6 p-3\">\r\n                        <ToBuilder/>\r\n                        <Route path=\"/builder/\"  component={Builder} />\r\n                    </div>\r\n                </div>\r\n            \r\n        </div>\r\n            \r\n        );\r\n\r\n    }\r\n \r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport './App.css';\r\nimport Home from './Home';\r\nimport Parser from './Parser';\r\nimport Builder from './Builder';\r\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass App extends React.Component{\r\n\r\n  render(){\r\n    \r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path='/' component={Home}/>\r\n          <Route path='/parser/' component={Parser}/>\r\n          <Route path='/builder/' component={Builder}/>\r\n        </Switch>\r\n\r\n      </Router>\r\n\r\n    );\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}